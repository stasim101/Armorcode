#Tomcat
server.port=3333

#Eureka client
spring.application.name=ingest-service

#JPA- PostgreSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.show-sql=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultComponentSafeNamingStrategy
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

#Kafka configuration
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
###spring.cloud.stream.kafka.binder.brokers=localhost:9092
###spring.cloud.stream.bindings.scan-logs-out.destination=logs
###spring.cloud.stream.bindings.scan-logs-out.content-type=application/json

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/src/main/resources/upload_directory

#URL to call throuth restapi
validate_token=http://localhost:2222/organization?token=

#Microservices URL
bandit=http://localhost:4444/readTopic

#Delimeter
bandit-del=--------------------------------------------------
